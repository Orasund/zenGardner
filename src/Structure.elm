module Structure exposing (..)

import Tile exposing (Obstacle(..), Tile(..))


fromEmojis : List String -> List ( ( Int, Int ), Tile )
fromEmojis rows =
    rows
        |> List.indexedMap
            (\y row ->
                row
                    |> String.toList
                    |> List.indexedMap
                        (\x char ->
                            char
                                |> fromEmoji
                                |> Maybe.map (Tuple.pair ( x, y ))
                        )
                    |> List.filterMap identity
            )
        |> List.concat


fromEmoji : Char -> Maybe Tile
fromEmoji char =
    case char of
        '🪨' ->
            Just (ObstacleTile Stone)

        '🕋' ->
            Just (ObstacleTile Pole)

        '👣' ->
            Just Sand

        '🌱' ->
            Just Gras

        '❌' ->
            Nothing

        _ ->
            Nothing


startingArea : List ( ( Int, Int ), Tile )
startingArea =
    [ "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌👣👣👣👣👣❌❌❌❌❌❌"
    , "❌❌❌❌👣👣🌱🌱🌱👣👣❌❌❌❌❌"
    , "❌❌❌❌👣🌱🌱🌱🌱🌱👣❌❌❌❌❌"
    , "❌❌❌❌👣🌱🌱🌱🌱🌱👣❌❌❌❌❌"
    , "❌❌❌❌👣👣🌱🌱🌱👣👣❌❌❌❌❌"
    , "❌❌❌❌❌👣👣👣👣👣❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    ]
        |> fromEmojis


grasArea : List ( ( Int, Int ), Tile )
grasArea =
    [ "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌🌱🌱🌱🌱🌱❌❌❌❌❌❌❌"
    , "❌❌❌🌱🌱🌱🌱🌱🌱🌱🌱🌱❌❌❌❌"
    , "❌❌🌱🌱🌱🌱❌❌❌❌🌱🌱🌱❌❌❌"
    , "❌❌🌱🌱🌱❌❌❌❌❌❌🌱🌱🌱❌❌"
    , "❌❌🌱🌱🌱❌❌❌❌❌❌❌🌱🌱❌❌"
    , "❌❌❌🌱❌❌❌❌❌❌❌❌🌱🌱❌❌"
    , "❌❌❌🌱❌❌❌❌❌❌❌❌🌱🌱❌❌"
    , "❌❌❌🌱❌❌❌❌❌❌❌❌🌱🌱❌❌"
    , "❌❌❌🌱❌❌❌❌❌❌❌🌱🌱❌❌❌"
    , "❌❌🌱🌱❌❌❌❌❌❌🌱🌱🌱❌❌❌"
    , "❌❌🌱🌱🌱❌❌❌❌🌱🌱🌱❌❌❌❌"
    , "❌❌🌱🌱🌱🌱🌱🌱🌱🌱🌱❌❌❌❌❌"
    , "❌❌❌🌱🌱🌱🌱❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    ]
        |> fromEmojis


grasBatches : List ( ( Int, Int ), Tile )
grasBatches =
    [ "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌🌱🌱🌱❌❌❌❌❌❌❌❌❌"
    , "❌❌❌🌱🌱🌱❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌🌱❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌🌱❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌🌱🌱❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌🌱🌱❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌🌱🌱🌱❌❌❌"
    , "❌❌❌🌱🌱❌❌❌❌❌❌🌱🌱❌❌❌"
    , "❌❌🌱🌱🌱🌱❌❌❌❌🌱🌱❌❌❌❌"
    , "❌❌🌱🌱❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌🌱🌱❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    ]
        |> fromEmojis


poleArea : List ( ( Int, Int ), Tile )
poleArea =
    [ "👣👣👣👣👣👣👣👣👣❌❌❌❌❌❌❌"
    , "👣🕋👣🕋👣🕋👣🕋👣❌❌❌❌❌❌❌"
    , "👣👣👣👣👣👣👣👣👣❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌👣👣👣❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌👣🕋👣❌❌"
    , "❌👣👣👣❌❌❌❌❌❌❌👣👣👣❌❌"
    , "❌👣🕋👣❌🌱🌱🌱🌱❌❌👣🕋👣❌❌"
    , "❌👣👣👣❌🌱🕋🕋🌱❌❌👣👣👣❌❌"
    , "❌👣🕋👣❌🌱🕋🕋🌱❌❌👣🕋👣❌❌"
    , "❌👣👣👣❌🌱🌱🌱🌱❌❌👣👣👣❌❌"
    , "❌👣🕋👣❌❌❌❌❌❌❌👣🕋👣❌❌"
    , "❌👣👣👣❌❌❌❌❌❌❌👣👣👣❌❌"
    , "❌👣🕋👣❌❌👣👣👣👣👣👣👣👣👣❌"
    , "❌👣👣👣❌❌👣🕋👣🕋👣🕋👣🕋👣❌"
    , "❌❌❌❌❌❌👣👣👣👣👣👣👣👣👣❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    ]
        |> fromEmojis


stoneArea : List ( ( Int, Int ), Tile )
stoneArea =
    [ "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌🪨🪨🪨🪨❌❌❌❌❌"
    , "❌❌❌❌🪨🪨❌❌❌❌❌🪨❌❌❌❌"
    , "❌❌❌🪨❌❌❌❌❌❌❌❌🪨❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌🪨❌❌❌"
    , "❌❌🪨❌❌❌❌❌❌❌❌❌❌🪨❌❌"
    , "❌❌🪨❌❌❌❌❌❌❌❌❌❌🪨❌❌"
    , "❌❌❌❌❌❌❌🌱🌱❌❌❌❌🪨❌❌"
    , "❌❌❌❌❌❌❌🌱🌱❌❌❌❌🪨❌❌"
    , "❌❌🪨❌❌❌❌❌❌❌❌❌🪨❌❌❌"
    , "❌❌🪨❌❌❌❌❌❌❌❌❌🪨❌❌❌"
    , "❌❌❌🪨❌❌❌❌❌❌❌❌🪨❌❌❌"
    , "❌❌❌🪨❌❌❌❌❌❌❌🪨❌❌❌❌"
    , "❌❌❌❌🪨❌❌❌❌🪨🪨❌❌❌❌❌"
    , "❌❌❌❌❌🪨🪨🪨🪨❌❌❌❌❌❌❌"
    , "❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌❌"
    ]
        |> fromEmojis


transpose : ( Int, Int ) -> List ( ( Int, Int ), Tile ) -> List ( ( Int, Int ), Tile )
transpose ( x, y ) =
    List.map
        (Tuple.mapFirst
            (Tuple.mapBoth
                ((+) x)
                ((+) y)
            )
        )
